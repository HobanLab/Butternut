}
related_df_list
related_df_list[[2]]
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
}
demerelate_list[[2]]
length(demerelate_list)
##half sibling names list
halfsib_names_list <- list()
demerelate_list[[1]][$Empirical_Relatedness],1
demerelate_list[[1]][,1]
##loop to read in genind files, convert and reduce
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
##half sibling names from the demerelate
halfsib_names_list[[i]] <- names(which(unlist(paste0(demerelate_list[[i]])$Empirical_Relatedness) > 0.25))
}
halfsib_names_list[[1]]
demerelate_list[[1]]
demerelate_list[[1]]$Empirical_Relatedness
unlist(demerelate_list[[1]])
demerelate_list[[1]][1]
demerelate_list[[1]][2]
##half sibling names list
halfsib_names_list <- list()
##loop to read in genind files, convert and reduce
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
##half sibling names from the demerelate
halfsib_names_list[[i]] <- names(which(unlist(demerelate_list[[i]][2]) > 0.25))
}
halfsib_names_list[[1]]
demerelate_list[[1]]
demerelate_list[[1]][2]
gsub("^.*\\.","", halfsib_names_list[[1]])
##create list for removing everything before the period
cleanfront_list <- list()
##create list for removing everything before the period
cleanfront_list <- list()
##create list for removing 2nd individual
cleanback_list <- list()
##create list for removing everything before the period
cleanfront_list <- list()
##create list for removing 2nd individual
cleanback_list <- list()
##loop to read in genind files, convert and reduce
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
##half sibling names from the demerelate
halfsib_names_list[[i]] <- names(which(unlist(demerelate_list[[i]][2]) > 0.25))
##remove everything before the period
cleanfront_list[[i]] <- gsub("^.*\\.","", halfsib_names_list[[i]])
##remove 2nd individuals in comparison
cleanback_list[[i]] <- gsub("^.*\\_","", cleanfront_list[[i]])
}
##create list for related individuals
relate_ind_list <- list()
##create list for related individuals
relate_ind_list <- list()
##loop to read in genind files, convert and reduce
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
##half sibling names from the demerelate
halfsib_names_list[[i]] <- names(which(unlist(demerelate_list[[i]][2]) > 0.25))
##remove everything before the period
cleanfront_list[[i]] <- gsub("^.*\\.","", halfsib_names_list[[i]])
##remove 2nd individuals in comparison
cleanback_list[[i]] <- gsub("^.*\\_","", cleanfront_list[[i]])
##lists for removing
relate_ind_list[[i]] <- unique(cleanback_list[[i]])
}
rownames(genind_list[[1]])
rownames(genind_list[[1]]@tab)
rownames(genind_list[[2]]@tab)
genind_list[[2]]
genind_list[[1]]
related_df_list[[1]]$Ind
related_df_list[[1]][,1]
related_df_list[[1]][,2]
related_df_list[[2]][,1]
genind_list[2]
genind_list[[2]]
genind_list[[1]]
##reduce by structure
genind_list_nomd <- list()
##loop to read in genind files, convert and reduce
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
##half sibling names from the demerelate
halfsib_names_list[[i]] <- names(which(unlist(demerelate_list[[i]][2]) > 0.25))
##remove everything before the period
cleanfront_list[[i]] <- gsub("^.*\\.","", halfsib_names_list[[i]])
##remove 2nd individuals in comparison
cleanback_list[[i]] <- gsub("^.*\\_","", cleanfront_list[[i]])
##lists for individuals to reduce by name
relate_ind_list[[i]] <- unique(cleanback_list[[i]])
##create row names
rownames(genind_list[[i]]) <- related_df_list[[i]][,1]
##remove missing data
genind_list_red[[i]] <- genind_nomd_list[[i]][!rownames(genind_nomd_list[[i]]@tab) %in% relate_ind_list[[i]],]
}
genind_list_red[[2]]
genind_nomd_list[[1]]
genind_nomd_list[[2]]
genind_nomd_list[[1]]
genind_nomd_list[[1]]
genind_nomd_list[[2]]
genind_nomd_list[[1]][rownames(genind_nomd_list[[1]]@tab) %in% relate_ind_list[[1]],]
genind_nomd_list[[1]][!rownames(genind_nomd_list[[1]]@tab) %in% relate_ind_list[[1]],]
##reduce by relatedness
genind_rel_red <- list()
##loop to read in genind files, convert and reduce
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
##half sibling names from the demerelate
halfsib_names_list[[i]] <- names(which(unlist(demerelate_list[[i]][2]) > 0.25))
##remove everything before the period
cleanfront_list[[i]] <- gsub("^.*\\.","", halfsib_names_list[[i]])
##remove 2nd individuals in comparison
cleanback_list[[i]] <- gsub("^.*\\_","", cleanfront_list[[i]])
##lists for individuals to reduce by name
relate_ind_list[[i]] <- unique(cleanback_list[[i]])
##create row names
rownames(genind_list[[i]]) <- related_df_list[[i]][,1]
##subset genind files
genind_rel_red[[i]] <- genind_nomd_list[[i]][!rownames(genind_nomd_list[[i]]@tab) %in% relate_ind_list[[i]],]
}
rownames(genind_nomd_list[[1]]@tab)
genind_nomd_list
rownames(genind_nomd_list[[2]]@tab)
length(related_df_list[[2]][,1])
##loop to read in genind files, convert and reduce
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
##half sibling names from the demerelate
halfsib_names_list[[i]] <- names(which(unlist(demerelate_list[[i]][2]) > 0.25))
##remove everything before the period
cleanfront_list[[i]] <- gsub("^.*\\.","", halfsib_names_list[[i]])
##remove 2nd individuals in comparison
cleanback_list[[i]] <- gsub("^.*\\_","", cleanfront_list[[i]])
##lists for individuals to reduce by name
relate_ind_list[[i]] <- unique(cleanback_list[[i]])
##create row names
rownames(genind_nomd_list[[i]]) <- related_df_list[[2]][,1]
##subset genind files
genind_rel_red[[i]] <- genind_nomd_list[[i]][!rownames(genind_nomd_list[[i]]@tab) %in% relate_ind_list[[i]],]
}
##loop to read in genind files, convert and reduce
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
##half sibling names from the demerelate
halfsib_names_list[[i]] <- names(which(unlist(demerelate_list[[i]][2]) > 0.25))
##remove everything before the period
cleanfront_list[[i]] <- gsub("^.*\\.","", halfsib_names_list[[i]])
##remove 2nd individuals in comparison
cleanback_list[[i]] <- gsub("^.*\\_","", cleanfront_list[[i]])
##lists for individuals to reduce by name
relate_ind_list[[i]] <- unique(cleanback_list[[i]])
##create row names
rownames(genind_nomd_list[[i]]@tab) <- related_df_list[[2]][,1]
##subset genind files
genind_rel_red[[i]] <- genind_nomd_list[[i]][!rownames(genind_nomd_list[[i]]@tab) %in% relate_ind_list[[i]],]
}
genind_rel_red[[1]]
genind_rel_red[[2]]
length(relate_ind_list[[2]])
##load in lon lat documents
lonlat_df_list <- list.files(path = "DataFiles\\before_reorg", pattern = "_lonlat.csv$")
##load in lon lat documents
lonlat_list <- list.files(path = "DataFiles\\before_reorg", pattern = "_lonlat.csv$")
##load in lon lat documents
lonlat_list <- list.files(path = "DataFiles\\before_reorg", pattern = "_lonlat.csv$")
##lonlat list to read in csv files
lonlat_df_list <- list()
##lon lat reduction from missing data
lonlat_nomd_list <- list()
##loop to read in genind files, convert and reduce
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
##half sibling names from the demerelate
halfsib_names_list[[i]] <- names(which(unlist(demerelate_list[[i]][2]) > 0.25))
##remove everything before the period
cleanfront_list[[i]] <- gsub("^.*\\.","", halfsib_names_list[[i]])
##remove 2nd individuals in comparison
cleanback_list[[i]] <- gsub("^.*\\_","", cleanfront_list[[i]])
##lists for individuals to reduce by name
relate_ind_list[[i]] <- unique(cleanback_list[[i]])
##create row names
rownames(genind_nomd_list[[i]]@tab) <- related_df_list[[2]][,1]
##subset genind files
genind_rel_red[[i]] <- genind_nomd_list[[i]][!rownames(genind_nomd_list[[i]]@tab) %in% relate_ind_list[[i]],]
##load in lon/lat documents
lonlat_df_list[[i]] <- read.csv(paste0(paste0("DataFiles\\before_reorg\\",lonlat_list[[i]])))
}
lonlat_df_list[[1]]
length(lonlat_df_list[[1]][,1])
length(lonlat_df_list[[2]][,1])
##lon lat reduction from missing data
lonlat_nomd_list <- list()
##loop to read in genind files, convert and reduce
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
##half sibling names from the demerelate
halfsib_names_list[[i]] <- names(which(unlist(demerelate_list[[i]][2]) > 0.25))
##remove everything before the period
cleanfront_list[[i]] <- gsub("^.*\\.","", halfsib_names_list[[i]])
##remove 2nd individuals in comparison
cleanback_list[[i]] <- gsub("^.*\\_","", cleanfront_list[[i]])
##lists for individuals to reduce by name
relate_ind_list[[i]] <- unique(cleanback_list[[i]])
##create row names
rownames(genind_nomd_list[[i]]@tab) <- related_df_list[[2]][,1]
##subset genind files
genind_rel_red[[i]] <- genind_nomd_list[[i]][!rownames(genind_nomd_list[[i]]@tab) %in% relate_ind_list[[i]],]
##load in lon/lat documents
lonlat_df_list[[i]] <- read.csv(paste0(paste0("DataFiles\\before_reorg\\",lonlat_list[[i]])))
##reduce lon lat data frame by missing data
lonlat_nomd_list[[i]] <- lonlat_df_list[[i]][as.character(lonlat_df_list[,1]) %in%
rownames(genind_nomd_list[[i]]@tab),]
}
##loop to read in genind files, convert and reduce
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
##half sibling names from the demerelate
halfsib_names_list[[i]] <- names(which(unlist(demerelate_list[[i]][2]) > 0.25))
##remove everything before the period
cleanfront_list[[i]] <- gsub("^.*\\.","", halfsib_names_list[[i]])
##remove 2nd individuals in comparison
cleanback_list[[i]] <- gsub("^.*\\_","", cleanfront_list[[i]])
##lists for individuals to reduce by name
relate_ind_list[[i]] <- unique(cleanback_list[[i]])
##create row names
rownames(genind_nomd_list[[i]]@tab) <- related_df_list[[2]][,1]
##subset genind files
genind_rel_red[[i]] <- genind_nomd_list[[i]][!rownames(genind_nomd_list[[i]]@tab) %in% relate_ind_list[[i]],]
##load in lon/lat documents
lonlat_df_list[[i]] <- read.csv(paste0(paste0("DataFiles\\before_reorg\\",lonlat_list[[i]])))
##reduce lon lat data frame by missing data
lonlat_nomd_list[[i]] <- lonlat_df_list[[i]][as.character(lonlat_df_list[[i]][,1]) %in%
rownames(genind_nomd_list[[i]]@tab),]
}
lonlat_nomd_list[[1]]
lonlat_nomd_list[[1]][,1]
length(lonlat_nomd_list[[1]][,1])
##reduced
lonlat_red_rel_list <- list()
##loop to read in genind files, convert and reduce
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
##half sibling names from the demerelate
halfsib_names_list[[i]] <- names(which(unlist(demerelate_list[[i]][2]) > 0.25))
##remove everything before the period
cleanfront_list[[i]] <- gsub("^.*\\.","", halfsib_names_list[[i]])
##remove 2nd individuals in comparison
cleanback_list[[i]] <- gsub("^.*\\_","", cleanfront_list[[i]])
##lists for individuals to reduce by name
relate_ind_list[[i]] <- unique(cleanback_list[[i]])
##create row names
rownames(genind_nomd_list[[i]]@tab) <- related_df_list[[2]][,1]
##subset genind files
genind_rel_red[[i]] <- genind_nomd_list[[i]][!rownames(genind_nomd_list[[i]]@tab) %in% relate_ind_list[[i]],]
##load in lon/lat documents
lonlat_df_list[[i]] <- read.csv(paste0(paste0("DataFiles\\before_reorg\\",lonlat_list[[i]])))
##reduce lon lat data frame by missing data
lonlat_nomd_list[[i]] <- lonlat_df_list[[i]][as.character(lonlat_df_list[[i]][,1]) %in%
rownames(genind_nomd_list[[i]]@tab),]
##reduce data frame by relatedness individuals
lonlat_red_rel_list[[i]] <- lonlat_nomd_list[[i]][!as.character(lonlat_df_list[[i]][,1]) %in%
relate_ind_list[[i]],]
}
lonlat_red_rel_list[[1]]
length(lonlat_red_rel_list[[1]][,1])
##loop to read in genind files, convert and reduce
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
##half sibling names from the demerelate
halfsib_names_list[[i]] <- names(which(unlist(demerelate_list[[i]][2]) > 0.25))
##remove everything before the period
cleanfront_list[[i]] <- gsub("^.*\\.","", halfsib_names_list[[i]])
##remove 2nd individuals in comparison
cleanback_list[[i]] <- gsub("^.*\\_","", cleanfront_list[[i]])
##lists for individuals to reduce by name
relate_ind_list[[i]] <- unique(cleanback_list[[i]])
##create row names
rownames(genind_nomd_list[[i]]@tab) <- related_df_list[[2]][,1]
##subset genind files
genind_rel_red[[i]] <- genind_nomd_list[[i]][!rownames(genind_nomd_list[[i]]@tab) %in% relate_ind_list[[i]],]
##load in lon/lat documents
lonlat_df_list[[i]] <- read.csv(paste0(paste0("DataFiles\\before_reorg\\",lonlat_list[[i]])))
##reduce lon lat data frame by missing data
lonlat_nomd_list[[i]] <- lonlat_df_list[[i]][as.character(lonlat_df_list[[i]][,1]) %in%
rownames(genind_nomd_list[[i]]@tab),]
##reduce data frame by relatedness individuals
lonlat_red_rel_list[[i]] <- lonlat_nomd_list[[i]][as.character(lonlat_df_list[[i]][,1]) %in%
relate_ind_list[[i]],]
}
length(lonlat_red_rel_list[[1]][,1])
lonlat_nomd_list[[1]]
length(lonlat_nomd_list[[1]][,1])
length(lonlat_nomd_list[[2]][,1])
as.character(lonlat_nomd_list[[1]][,1])
length(as.character(lonlat_nomd_list[[1]][,1]))
loaf <- lonlat_nomd_list[[1]][as.character(lonlat_nomd_list[[1]][,1]) %in%
relate_ind_list[[1]],]
loaf <- lonlat_nomd_list[[1]][!as.character(lonlat_nomd_list[[1]][,1]) %in%
relate_ind_list[[1]],]
##loop to read in genind files, convert and reduce
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
##half sibling names from the demerelate
halfsib_names_list[[i]] <- names(which(unlist(demerelate_list[[i]][2]) > 0.25))
##remove everything before the period
cleanfront_list[[i]] <- gsub("^.*\\.","", halfsib_names_list[[i]])
##remove 2nd individuals in comparison
cleanback_list[[i]] <- gsub("^.*\\_","", cleanfront_list[[i]])
##lists for individuals to reduce by name
relate_ind_list[[i]] <- unique(cleanback_list[[i]])
##create row names
rownames(genind_nomd_list[[i]]@tab) <- related_df_list[[2]][,1]
##subset genind files
genind_rel_red[[i]] <- genind_nomd_list[[i]][!rownames(genind_nomd_list[[i]]@tab) %in% relate_ind_list[[i]],]
##load in lon/lat documents
lonlat_df_list[[i]] <- read.csv(paste0(paste0("DataFiles\\before_reorg\\",lonlat_list[[i]])))
##reduce lon lat data frame by missing data
lonlat_nomd_list[[i]] <- lonlat_df_list[[i]][as.character(lonlat_df_list[[i]][,1]) %in%
rownames(genind_nomd_list[[i]]@tab),]
##reduce data frame by relatedness individuals
lonlat_red_rel_list[[i]] <- lonlat_nomd_list[[i]][!as.character(lonlat_nomd_list[[i]][,1]) %in%
relate_ind_list[[i]],]
}
length(lonlat_red_rel_list[[1]][,1])
length(lonlat_red_rel_list[[2]][,1])
##loop to read in genind files, convert and reduce
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
##half sibling names from the demerelate
halfsib_names_list[[i]] <- names(which(unlist(demerelate_list[[i]][2]) > 0.25))
##remove everything before the period
cleanfront_list[[i]] <- gsub("^.*\\.","", halfsib_names_list[[i]])
##remove 2nd individuals in comparison
cleanback_list[[i]] <- gsub("^.*\\_","", cleanfront_list[[i]])
##lists for individuals to reduce by name
relate_ind_list[[i]] <- unique(cleanback_list[[i]])
##create row names
rownames(genind_nomd_list[[i]]@tab) <- related_df_list[[2]][,1]
##subset genind files
genind_rel_red[[i]] <- genind_nomd_list[[i]][!rownames(genind_nomd_list[[i]]@tab) %in% relate_ind_list[[i]],]
##load in lon/lat documents
lonlat_df_list[[i]] <- read.csv(paste0(paste0("DataFiles\\before_reorg\\",lonlat_list[[i]])))
##reduce lon lat data frame by missing data
lonlat_nomd_list[[i]] <- lonlat_df_list[[i]][as.character(lonlat_df_list[[i]][,1]) %in%
rownames(genind_nomd_list[[i]]@tab),]
##reduce data frame by relatedness individuals
lonlat_red_rel_list[[i]] <- lonlat_nomd_list[[i]][!as.character(lonlat_nomd_list[[i]][,1]) %in%
relate_ind_list[[i]],]
##write out reduced data files
if(i == 1){
write.csv(lonlat_red_rel_list[[1]], paste0("DataFiles\\before_reorg\\", "_rel_red_lonlat_11loci.csv"))
} else {
write.csv(lonlat_red_rel_list[[2]], paste0("DataFiles\\before_reorg\\", "_rel_red_lonlat_8loci.csv"))
}
}
##loop to read in genind files, convert and reduce
for(i in 1:length(gen_list)){
##read in genind files
genind_list[[i]] <- read.genepop(paste0("DataFiles\\before_reorg\\", gen_list[[i]]), ncode = 3)
##remove individuals with greater than 25% missing data
genind_nomd_list[[i]] <- missingno(genind_list[[i]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##read in csv of relatedness files
related_df_list[[i]] <- read.csv(paste0("DataFiles\\before_reorg\\", related_list[[i]]))
##calculate relatedness
demerelate_list[[i]] <- Demerelate(related_df_list[[i]], object = T, value = "loiselle")
##half sibling names from the demerelate
halfsib_names_list[[i]] <- names(which(unlist(demerelate_list[[i]][2]) > 0.25))
##remove everything before the period
cleanfront_list[[i]] <- gsub("^.*\\.","", halfsib_names_list[[i]])
##remove 2nd individuals in comparison
cleanback_list[[i]] <- gsub("^.*\\_","", cleanfront_list[[i]])
##lists for individuals to reduce by name
relate_ind_list[[i]] <- unique(cleanback_list[[i]])
##create row names
rownames(genind_nomd_list[[i]]@tab) <- related_df_list[[2]][,1]
##subset genind files
genind_rel_red[[i]] <- genind_nomd_list[[i]][!rownames(genind_nomd_list[[i]]@tab) %in% relate_ind_list[[i]],]
##load in lon/lat documents
lonlat_df_list[[i]] <- read.csv(paste0(paste0("DataFiles\\before_reorg\\",lonlat_list[[i]])))
##reduce lon lat data frame by missing data
lonlat_nomd_list[[i]] <- lonlat_df_list[[i]][as.character(lonlat_df_list[[i]][,1]) %in%
rownames(genind_nomd_list[[i]]@tab),]
##reduce data frame by relatedness individuals
lonlat_red_rel_list[[i]] <- lonlat_nomd_list[[i]][!as.character(lonlat_nomd_list[[i]][,1]) %in%
relate_ind_list[[i]],]
##write out reduced data files
if(i == 1){
write.csv(lonlat_red_rel_list[[1]], paste0("DataFiles\\before_reorg\\", "lonlat_rel_red_11loci.csv"))
} else {
write.csv(lonlat_red_rel_list[[2]], paste0("DataFiles\\before_reorg\\", "lonlat_rel_red_8loci.csv"))
}
}
