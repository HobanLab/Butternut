Based on code generated by Peter Breslin (ASU) and Fabio Suzart de Albuquerque 

##libraries 
library(raster)
library(sp)
library(sf)
library(rworldmap)
library(rgdal)
library(spdep)
library(rgeos)
library(dismo)
library(gbm)
library(AUC)
library(ggplot2)
library(plyr)
library(HH)
library(ltm)

##set working directory
##load data points
setwd("G:/My Drive/Hoban_Lab_Docs/Projects/Butternut_JUCI")

######################################################################
################# Reduce Spatial Autocorrelation #####################
######################################################################
##read in occurrence records
butternut_presence <- read.csv("SDMs/InputFiles/Points/butternut_occurrence_points.csv")
butternut_presence <- butternut_presence[,-1]

##Now set spatial reference for the points
coordinates(butternut_presence) <- c('Longitude', 'Latitude')
proj4string(butternut_presence) <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84")

##project to Albers Equal Area Conic 
## distance code requires 
butternut_limit_proj <- spTransform(butternut_presence, CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"))

##First we need to reduce spatial autocorrelation

#####100 meters
points_matrix <- gWithinDistance(butternut_limit_proj, dist = .00086206895, byid = TRUE)
#####300 meters
points_matrix <- gWithinDistance(butternut_limit_proj, dist = .00258620685, byid = TRUE)
######500 m
points_matrix <- gWithinDistance(butternut_limit_proj, dist = .0043103448, byid = TRUE)
#####1 km
points_matrix <- gWithinDistance(butternut_limit_proj, dist = .0086206897, byid = TRUE)
####2km
points_matrix <- gWithinDistance(butternut_limit_proj, dist = .0172413794, byid = TRUE)

##create tri matrix with NAs for bottom rows
points_matrix[lower.tri(points_matrix, diag=TRUE)] <- NA

##now determine where points within 1 km are 
auto_cols <- colSums(points_matrix, na.rm=TRUE) == 0

##now subset the original data by this 
occurrence_wo_auto <- butternut_presence[auto_cols,]

##convert to a data frame
occurrence_no_auto <-data.frame(occurrence_wo_auto)

##remove columns with no points 
occurrence_no_auto <- na.omit(occurrence_wo_auto)

##write to file
write.csv(occurence_wo_auto, "SDMs/InputFiles/Points/occurrence_final.csv")

######################################################################
############################ Plotting ################################
######################################################################

##set limits
min_lon <- min(occurrence_wo_auto$Longitude)
max_lon <- max(occurrence_wo_auto$Longitude)
min_lat <- min(occurrence_wo_auto$Latitude)
max_lat <- max(occurrence_wo_auto$Latitude)

##turns coordinates into Spatial Points
coordinates(occurrence_no_auto) <- c('Longitude', 'Latitude')
proj4string(occurrence_no_auto) <- CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0")

##get map
newmap <- getMap(resolution = "low")

##now plot
plot(newmap, xlim = c(min_lon, max_lon), ylim = c(min_lat, max_lat))
points(occurrence_no_auto, col = "dodgerblue", pch = 16)

######################################################################
################# Generated Pseudo-Absence Points ####################
######################################################################
##remove duplicate points
occurrence_no_auto <- remove.duplicates(occurrence_no_auto)

##transform to Albers for presence points
occurence_presence <- spTransform(occurrence_no_auto, CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"))

##load in cropped raster
extent <- arc.open("C:/Users/eschumacher/Documents/ArcGIS/Projects/butternutSDM/butternutSDM.gdb/elevation_Clip1")
extent_arc <- arc.raster(extent)
extent_raster <- as.raster(extent_arc)

##project extent raster to Albers
extent_project <- projectRaster(extent_raster, crs = "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0")

##Now start generating background points
background <- randomPoints(extent_project, 5443)

##now create spatial points object for absence points 
set.seed(25)
background_2 <- gridSample(background, extent_project, n=1) 
bg_proj <- SpatialPoints(background_2, proj4string=CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"))

##Create spatial points object for presence points 
set.seed(8)
extent_sample <- gridSample(occurence_presence, extent_project, n=1) 
spatial_points <- SpatialPoints(extent_sample, CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"))

##Now determine if any of the points in presence/absence are at the same coordinates
butternut_diff <- gDifference(bg_proj, spatial_points)

##write out absence points 
write.csv(butternut_diff, "SDMs/InputFiles/Points/butternut_absence.csv")
write.csv(occurrence_no_auto, "SDMs/InputFiles/Points/butternut_presence.csv")

######################################################################
###################### Variable Selection ############################
######################################################################

##first need to combine presence and absence points into one document and add a column indicating presence of absence
##load presence
butternut_presence <- read.csv("SDMs/InputFiles/Points/butternut_presence.csv")
butternut_presence <- data.frame(butternut_presence)
butternut_presence$PA <- "1"
butternut_presence <- butternut_presence[,-1]
colnames(butternut_presence) <- c("Longitude", "Latitude", "PA")

##load absence 
butternut_absence <- read.csv("SDMs/InputFiles/Points/butternut_absence.csv")
butternut_absence <- data.frame(butternut_absence)
butternut_absence$PA <- "0"
butternut_absence <- butternut_absence[,-1]
colnames(butternut_absence) <- c("Longitude", "Latitude", "PA")

##now combine into one dataset
butternut_PA <- rbind(butternut_presence,butternut_absence)
write.csv(butternut_PA, "SDMs/InputFiles/Points/butternut_PA.csv")

##new df
butternut_PA_df <- butternut_PA

##now SP Transform
coordinates(butternut_PA) <- c('Longitude', 'Latitude')
proj4string(butternut_PA) <- CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0")

##load variables
worldclim <- getData("worldclim",var="bio",res= 2.5)

##crop worldclim rasters
worldclim_crop <- crop(worldclim, extent_raster)

##project
worldclim_project <- projectRaster(worldclim_crop, crs = "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0")
names(worldclim_project) <- c("mat", "mdr", "iso", "temp_season", "mtwm", "mtcm", "range", "mtwetq", "mtdq", "mtwarq", "mtcq", "map", "pwm", "pdm", "precip_season", "pwetq", "pdq", "pwarq", "pcq")

##load in soil variables 
setwd("C:/Users/eschumacher/Documents/JUCI/soil2/NACP_MSTMIP_UNIFIED_NA_SOIL_MA_1242/data")

##load in soil layers
dom_soil <- raster("Unified_NA_Soil_Map_First_Dominant_Soil_Component_Area_Percentage.tif")
max_depth <- raster("Unified_NA_Soil_Map_Maximum_Soil_Depth.tif")
sub_cat <- raster("Unified_NA_Soil_Map_Subsoil_Cation_Exchange_Capacity.tif")
sub_clay <- raster("Unified_NA_Soil_Map_Subsoil_Clay_Fraction.tif")
sub_gravel <- raster("Unified_NA_Soil_Map_Subsoil_Gravel_Content.tif")
sub_oc <- raster("Unified_NA_Soil_Map_Subsoil_Organic_Carbon.tif")
sub_ph <- raster("Unified_NA_Soil_Map_Subsoil_pH.tif")
sub_bulk <- raster("Unified_NA_Soil_Map_Subsoil_Reference_Bulk_Density.tif")
sub_sand <- raster("Unified_NA_Soil_Map_Subsoil_Sand_Fraction.tif")
sub_silt <- raster("Unified_NA_Soil_Map_Subsoil_Silt_Fraction.tif")
top_cat <- raster("Unified_NA_Soil_Map_Topsoil_Cation_Exchange_Capacity.tif")
top_clay <- raster("Unified_NA_Soil_Map_Topsoil_Clay_Fraction.tif")
top_gravel <- raster("Unified_NA_Soil_Map_Topsoil_Gravel_Content.tif")
top_oc <- raster("Unified_NA_Soil_Map_Topsoil_Organic_Carbon.tif")
top_ph <- raster("Unified_NA_Soil_Map_Topsoil_pH.tif")
top_bulk <- raster("Unified_NA_Soil_Map_Topsoil_Reference_Bulk_Density.tif")
top_sand <- raster("Unified_NA_Soil_Map_Topsoil_Sand_Fraction.tif")
top_silt <- raster("Unified_NA_Soil_Map_Topsoil_Silt_Fraction.tif")

soil_stack <- stack(dom_soil, max_depth, sub_cat, sub_clay,
                    sub_gravel, sub_oc, sub_ph, sub_bulk, sub_sand, sub_silt, 
                    top_cat, top_clay, top_gravel, top_oc, top_ph, top_bulk, top_sand,
                    top_silt
)

##crop
soil_crop <- crop(soil_stack, extent_raster)
##project
soil_proj <- projectRaster(soil_crop, crs = "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0")

##elevation
setwd("C:/Users/eschumacher/Documents/Butternut")

##elevation
elevation <- raster("wc2.1_2.5m_elev.tif")

##crop to extent 
elevation_crop <- crop(elevation, extent_raster)
##project
elevation_proj <- projectRaster(elevation_crop, crs = "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0")
##calculate slope and aspect
slope_aspect <- slopeAspect(elevation_proj, out=c('slope', 'aspect'), unit='radians')

##now extract values
worldclim_extract <- extract(worldclim_project, butternut_PA)
soil_extract <- extract(soil_proj, butternut_PA)
slopeaspect_extract <- extract(slope_aspect, butternut_PA)
elevation_extract <- extract(elevation_proj, butternut_PA)

##bind into columns 
butternut_var <- cbind(butternut_PA_df, elevation_extract, slopeaspect_extract, worldclim_extract, soil_extract)
butternut_var <- na.omit(butternut_var)

##check out how many individuals are left 
length(butternut_var[butternut_var$PA == "1",]$PA) ##Presence points, 5386
length(butternut_var[butternut_var$PA == "0",]$PA) ##Absence points, 5062

##########creation correlation dissimilarity matrix

#correlation matrix
predictors_correlation <-cor(butternut_var[,4:43])

#correlation matrix as distance matrix - dissimilarity matrix
predictors_dist <- as.dist(abs(predictors_correlation))

#create dissimilarity tree 
predictor_cluster <- hclust(1-(predictors_dist))

#plot
par(mfrow=c(1,1))

setwd("G:/My Drive/Hoban_Lab_Docs/Projects/Butternut_JUCI/SDMs/InputFiles/VariableSelection")

pdf("cluster_ecogeo.pdf", width = 15, height = 10)
plot(as.dendrogram(predictor_cluster), horiz =T, main="Dissimilarity Cluster of Ecogeorgaphic Varibales", cex.main=0.8)
abline(v=0.5, col='red')
dev.off()

#Bisserial correlation

variable_names <- names(butternut_var[,1:43])

cor_result <- 43
butternut_col <- 2 

biserial_cor_matrix <- matrix(ncol=butternut_col, nrow=cor_result)

for (i in 4:43){
  
  biserial_cor_coef <- biserial.cor(butternut_var[,i],butternut_var$PA)
  
  biserial_cor_matrix[i,] <- rbind(variable_names[i], biserial_cor_coef)
  
}

##Biserial correlation 
biserial_cor_out <- data.frame(biserial_cor_matrix[-1:-3,])
colnames(biserial_cor_out) <- c("Variable", "Correlation Coef")

##write out data frame
write.csv(biserial_cor_out, "biserial_cor_matrix.csv")






