Based on code generated by Peter Breslin (ASU) and Fabio Suzart de Albuquerque 

##libraries 
library(raster)
library(sp)
library(sf)
library(rworldmap)
library(rgdal)
library(spdep)
library(rgeos)
library(dismo)
library(gbm)
library(AUC)
library(ggplot2)
library(plyr)
library(arcgisbinding)
library(HH)
library(ltm)

##set working directory
setwd("G:/My Drive/Hoban_Lab_Docs/Projects/Butternut_JUCI/SDMs/SDM2")

######################################################################
################# Reduce Spatial Autocorrelation #####################
######################################################################
##read in occurrence records
butternut_extent_oc <- read.csv("lim_extent.csv")

##Now set spatial reference for the points
coordinates(butternut_extent_oc) <- c('Longitude', 'Latitude')
proj4string(butternut_extent_oc) <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84")

##project to Albers Equal Area Conic 
## distance code requires 
butternut_limit_proj <- spTransform(butternut_extent_oc, CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"))

##First we need to reduce spatial autocorrelation

#####100 meters
points_matrix <- gWithinDistance(butternut_limit_proj, dist = .00086206895, byid = TRUE)
#####300 meters
points_matrix <- gWithinDistance(butternut_limit_proj, dist = .00258620685, byid = TRUE)
######500 m
points_matrix <- gWithinDistance(butternut_limit_proj, dist = .0043103448, byid = TRUE)
#####1 km
points_matrix <- gWithinDistance(butternut_limit_proj, dist = .0086206897, byid = TRUE)
####2km
points_matrix <- gWithinDistance(butternut_limit_proj, dist = .0172413794, byid = TRUE)

#create pairwise matrix for any points that that are within these buffers
points_matrix[lower.tri(points_matrix, diag=TRUE)] <- NA

##determine if any of the points are within 2 km or lower distance
auto_cols <- colSums(points_matrix, na.rm=TRUE) == 0

##limits the points document by this 
occurrence_wo_auto <- butternut_limit_proj[auto_cols,]

##generate a data frame for export 
occurrence_wo_auto <- data.frame(butternut_limit_proj)


######################################################################
################# Generated Pseudo-Absence Points ####################
######################################################################

##Randomly generate background points
bgsel <- randomPoints(elevation_raster, 114) 
bgsel2 <- gridSample(bgsel, elevation_raster, n=1) 
bg_data <- SpatialPoints(bgsel2, proj4string=CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"))

##Generate sampling grid of presence points to compare with pseudo-absence points
set.seed(8)
occ_samp <- gridSample(butternut_limit_proj, elevation_raster, n=1) 
##assign correct project coordinate information
butternut_occ <- SpatialPoints(occ_samp, proj4string=CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"))
##identify if there are points with the same coordinates
butternut_abs <- gDifference(bg_data, butternut_occ)


